{"version":3,"sources":["components/Header.jsx","utils/http.js","services/hackerNewsData.js","utils/time.js","components/HackerNewsElements/NewsItem.jsx","components/common/Pagination.jsx","components/HackerNewsElements/index.jsx","components/HackerNewsElements/NewsItemComment.jsx","components/HackerNewsElements/NewsItemDetail.jsx","components/AppRouter.jsx","components/Home.jsx","serviceWorker.js","index.js"],"names":["Header","className","to","title","http","axios","create","baseURL","headers","get","endpoint","a","data","console","log","getAllData","ids","getNewsItem","newsId","item","getDifferenceInTime","unixTime","getCurrentUnixTime","minutes","Math","floor","hours","days","Date","getTime","NewsItem","props","newsItemId","listItemData","React","useState","isdataLoading","setLoadingStatus","newsItemData","setNewsItemData","loadingState","useEffect","pathname","id","state","score","by","time","RenderListItem","ListComponent","RenderActionBar","ActionBarComponent","RenderErrorComponent","Pagination","dataArray","pageLimit","paginationItem","paginationActionBar","goToPage","paginationSlots","setPaginationSlot","pageIndex","setPageIndex","sortedObj","index","groupedArray","forEach","value","idx","sortToObj","isLastPage","Object","keys","length","lastPage","isValidPageIndex","ActionBar","currentPageIndex","onClick","map","key","PagninationActionBar","xmlns","class","width","height","viewBox","stroke-width","stroke","fill","stroke-linecap","stroke-linejoin","d","points","NewsDashboard","newsIds","updateNewsIds","isDataFetching","setDataFetchingStatus","getPageFromQueryParam","URLSearchParams","useLocation","search","fetchAllData","NewsItemComment","commentId","commentData","setCommentData","isDataLoading","setDataLoadingStatus","text","dangerouslySetInnerHTML","__html","sanitize","kids","kid","NewsItemDetail","location","href","url","target","rel","AppRouter","exact","path","render","component","Home","Boolean","window","hostname","match","ReactDOM","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bb25f162.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => (\n  <header>\n    <div className=\"header container\">\n      <div className=\"col-left\">\n        <h1 className=\"header__main-header\">\n          <Link to=\"/news-feed?page=1\" title=\"home\">\n            hackernewsUI\n          </Link>\n        </h1>\n      </div>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import axios from 'axios';\n\nexport const http = axios.create({\n  baseURL: 'https://hacker-news.firebaseio.com/v0',\n  headers: {\n    'content-type': 'application/json',\n  },\n});\n\nexport const get = async (endpoint) => {\n  try {\n    const data = await http.get(endpoint);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import { get } from '../utils/http';\n\n/**\n *  Gets all the top news id\n *  @params {string} endpoint is provided as param\n *\n *  @returns {data[]} Contains all the top stories id in a array\n */\n\nexport const getAllData = async () => {\n  const ids = await get('/topstories.json?print=pretty');\n  if (!ids) {\n    return console.log('empty');\n  }\n\n  return ids;\n};\n\nexport const getNewsItem = async (newsId) => {\n  const item = await get(`/item/${newsId}.json?print+pretty`);\n\n  if (!item) {\n    return console.log('empty');\n  }\n  return item;\n};\n\n// export const getAllData = () =>\n//   http\n//     .get('/topstories.json?print=pretty')\n//     .then((data) => {\n//       console.log(data.data.length, data.data);\n//       sortToObj(data.data);\n//     })\n//     .catch((err) => console.log(err));\n","/**\n *\n * Gets difference in time in words from given unix time to the current time\n *\n * @param {number} unixTime\n *\n * @returns {string}\n */\n\nexport function getDifferenceInTime(unixTime) {\n  if (!unixTime || unixTime > getCurrentUnixTime()) {\n    return 'N/A';\n  }\n\n  const minutes = Math.floor((getCurrentUnixTime() - unixTime) / 60);\n  const hours = Math.floor(minutes / 60);\n  const days = Math.floor(hours / 24);\n\n  if (days > 30) {\n    return `${hours} month(s) ago`;\n  } else if (hours > 24) {\n    return `${days} day(s) ago`;\n  } else if (minutes > 60) {\n    return `${hours} hour(s) ago`;\n  } else if (minutes > 1) {\n    return `${minutes} minutes ago`;\n  } else {\n    return 'less than a minute ago';\n  }\n}\n\nexport const getCurrentUnixTime = () => Math.floor(new Date().getTime() / 1000.0);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { getDifferenceInTime } from '../../utils/time';\nimport { getNewsItem } from '../../services/hackerNewsData';\n\nconst NewsItem = (props) => {\n  const newsItemId = props.listItemData;\n  const [isdataLoading, setLoadingStatus] = React.useState(false);\n  const [newsItemData, setNewsItemData] = React.useState(null);\n\n  const loadingState = (\n    <li className=\"list__item preloader-block\">\n      <div className=\"preloader-block__content\" />\n      <div className=\"preloader-block__content sm mt--5\" />\n    </li>\n  );\n\n  React.useEffect(() => {\n    (async () => {\n      setLoadingStatus(true);\n      const data = await getNewsItem(newsItemId);\n      setNewsItemData(data.data);\n      setLoadingStatus(false);\n    })();\n  }, [newsItemId]);\n\n  return (\n    <>\n      {isdataLoading\n        ? loadingState\n        : newsItemData && (\n            <li className=\"list__item\">\n              <Link\n                to={{\n                  pathname: `/news-feed/${newsItemData.id}`,\n                  state: { newsItemData },\n                }}\n              >\n                <h2 className=\"text--header\">{newsItemData.title}</h2>\n                <div className=\"text--secondary\">\n                  Score: <span className=\"separator\">{newsItemData.score}</span>\n                  By: <span className=\"separator\">{newsItemData.by} </span>\n                  {getDifferenceInTime(newsItemData.time)}\n                </div>\n              </Link>\n            </li>\n          )}\n    </>\n  );\n};\n\nexport default NewsItem;\n","import React from 'react';\n\nconst Pagination = (props) => {\n  const { dataArray, pageLimit, paginationItem, paginationActionBar = '', goToPage = 0 } = props;\n  const [paginationSlots, setPaginationSlot] = React.useState(null);\n  const [pageIndex, setPageIndex] = React.useState(0);\n\n  /**\n   *  This function takes in array of ids\n   *  and returns sortedObject\n   *\n   *  {[index]: [groupedArrays]}\n   *\n   * @param {array} data\n   *\n   * @returns {object}\n   */\n\n  function sortToObj(data) {\n    let sortedObj = {};\n    let index = 0;\n    let groupedArray = [];\n\n    data.forEach((value, idx) => {\n      if (idx % pageLimit === 0 && idx !== 0) {\n        groupedArray = [];\n        index++;\n      }\n\n      groupedArray = [...groupedArray, value];\n      sortedObj = { ...sortedObj, [index]: [...groupedArray] };\n    });\n\n    return sortedObj;\n  }\n\n  React.useEffect(() => {\n    if (!goToPage) {\n      return;\n    }\n\n    return setPageIndex(goToPage - 1);\n  }, [setPageIndex, goToPage]);\n\n  React.useEffect(() => setPaginationSlot(sortToObj(dataArray)), [dataArray]);\n\n  const isLastPage = !!paginationSlots && pageIndex === Object.keys(paginationSlots).length - 1;\n  const lastPage = !!paginationSlots && Object.keys(paginationSlots).length - 1;\n\n  const isValidPageIndex = !!paginationSlots && pageIndex >= 0 && pageIndex <= Object.keys(paginationSlots).length - 1;\n\n  const ActionBar =\n    !!paginationActionBar && typeof paginationActionBar === 'function' ? (\n      <RenderActionBar\n        ActionBarComponent={paginationActionBar}\n        currentPageIndex={pageIndex}\n        isLastPage={isLastPage}\n        lastPage={lastPage}\n      />\n    ) : (\n      <div className=\"pagination__action-bar\">\n        {!!pageIndex && <button className=\"btn-left-arrow\" onClick={() => setPageIndex(pageIndex - 1)} />}\n        <div className=\"circular-index\">{pageIndex + 1}</div>\n        {!isLastPage ? <button className=\"btn-right-arrow\" onClick={() => setPageIndex(pageIndex + 1)} /> : <></>}\n      </div>\n    );\n\n  return (\n    <>\n      {isValidPageIndex ? (\n        <>\n          <ul className=\"pagination list list--news-feed\">\n            {!!paginationSlots &&\n              paginationSlots[pageIndex].map((value, index) => (\n                <RenderListItem key={index} listItemData={value} ListComponent={paginationItem} />\n              ))}\n          </ul>\n          {ActionBar}\n        </>\n      ) : (\n        <RenderErrorComponent />\n      )}\n    </>\n  );\n};\n\nconst RenderListItem = (props) => {\n  const { ListComponent } = props;\n\n  if (!!ListComponent && typeof ListComponent !== 'function') {\n    return <></>;\n  }\n\n  return <ListComponent {...props} />;\n};\n\nconst RenderActionBar = (props) => {\n  const { ActionBarComponent } = props;\n\n  if (!!ActionBarComponent && typeof ActionBarComponent !== 'function') {\n    return <></>;\n  }\n\n  return <ActionBarComponent {...props} />;\n};\n\nconst RenderErrorComponent = () => <div>Page Not Found !!!</div>;\n\nexport default Pagination;\n","import React from 'react';\nimport { useLocation, Link } from 'react-router-dom';\n\nimport { getAllData } from '../../services/hackerNewsData';\n\nimport NewsItem from './NewsItem';\nimport Pagination from '../common/Pagination';\n\nconst loadingState = (\n  <div className=\"flex-wrapper flex-wrapper--ctr empty-state\">\n    <div className=\"loader-wrapper\">\n      <div className=\"loader\" />\n    </div>\n    <div className=\"text--secondary\">Loading Feed</div>\n  </div>\n);\n\nconst useQuery = () => new URLSearchParams(useLocation().search);\n\nconst PagninationActionBar = (props) => {\n  const { lastPage, isLastPage, currentPageIndex: pageIndex } = props;\n\n  return (\n    <div className=\"pagination__action-bar\">\n      {/* button to the first page */}\n      {!!pageIndex && (\n        <Link to={`news-feed?page=${1}`} className=\"btn--icon btn--pagination left\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"icon icon-tabler icon-tabler-chevrons-left\"\n            width=\"44\"\n            height=\"44\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"1.5\"\n            stroke=\"#2c3e50\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          >\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <polyline points=\"11 7 6 12 11 17\" />\n            <polyline points=\"17 7 12 12 17 17\" />\n          </svg>\n        </Link>\n      )}\n\n      {!!pageIndex && (\n        <Link to={`news-feed?page=${pageIndex}`}>\n          <button className=\"btn-left-arrow\" />\n        </Link>\n      )}\n      <div className=\"circular-index\">{pageIndex + 1}</div>\n      {!props.isLastPage ? (\n        <Link to={`news-feed?page=${pageIndex + 2}`}>\n          <button className=\"btn-right-arrow\" />\n        </Link>\n      ) : (\n        <></>\n      )}\n      {/* // button to the lastpage */}\n      {!isLastPage ? (\n        <Link to={`news-feed?page=${lastPage + 1}`} className=\"btn--icon btn--pagination right\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            class=\"icon icon-tabler icon-tabler-chevrons-right\"\n            width=\"44\"\n            height=\"44\"\n            viewBox=\"0 0 24 24\"\n            stroke-width=\"1.5\"\n            stroke=\"#2c3e50\"\n            fill=\"none\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          >\n            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <polyline points=\"7 7 12 12 7 17\" />\n            <polyline points=\"13 7 18 12 13 17\" />\n          </svg>\n        </Link>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\n\nconst NEWS_ITEMS_IN_VIEW = 10;\nconst NewsDashboard = (props) => {\n  const [newsIds, updateNewsIds] = React.useState([]);\n  const [isDataFetching, setDataFetchingStatus] = React.useState(false);\n  const getPageFromQueryParam = useQuery().get('page');\n\n  React.useEffect(() => {\n    async function fetchAllData() {\n      setDataFetchingStatus(true);\n      const data = await getAllData();\n      updateNewsIds(data.data);\n      setDataFetchingStatus(false);\n    }\n\n    fetchAllData();\n  }, []);\n\n  if (isDataFetching) {\n    return loadingState;\n  }\n\n  return (\n    <Pagination\n      dataArray={newsIds}\n      paginationItem={NewsItem}\n      paginationActionBar={PagninationActionBar}\n      pageLimit={NEWS_ITEMS_IN_VIEW}\n      goToPage={getPageFromQueryParam}\n    />\n  );\n};\n\nexport default NewsDashboard;\n","import React from 'react';\nimport { sanitize } from 'dompurify';\n\nimport { getDifferenceInTime } from '../../utils/time';\nimport { getNewsItem } from '../../services/hackerNewsData';\n\nconst NewsItemComment = ({ commentId }) => {\n  const [commentData, setCommentData] = React.useState(null);\n  const [isDataLoading, setDataLoadingStatus] = React.useState(false);\n\n  const loadingState = (\n    <li className=\"list__item\">\n      <div className=\"comment-block preloader-block\">\n        <div className=\"preloader-block__content sm\" />\n        <div className=\"preloader-block__content comment-block__comment\" />\n      </div>\n    </li>\n  );\n\n  React.useEffect(() => {\n    (async function fetchComment() {\n      setDataLoadingStatus(true);\n      const data = await getNewsItem(commentId);\n      setDataLoadingStatus(false);\n      setCommentData(data.data);\n    })();\n  }, [commentId]);\n\n  console.log(commentData && commentData.time);\n\n  return (\n    <>\n      {isDataLoading\n        ? loadingState\n        : commentData &&\n          commentData.text && (\n            <li className=\"list__item\">\n              <div className=\"comment-block\">\n                <div className=\"text--secondary\">\n                  <span className=\"separator text--bold\">{commentData.by}</span>\n                  <span>{getDifferenceInTime(commentData.time)}</span>\n                </div>\n                <div\n                  className=\"comment-block__comment\"\n                  dangerouslySetInnerHTML={{ __html: sanitize(commentData.text) }}\n                />\n              </div>\n\n              {commentData.kids && (\n                <ul className=\"list list--comment-feed\">\n                  {commentData.kids.map((kid, idx) => (\n                    <NewsItemComment key={`news-comment-${kid}`} commentId={kid} />\n                  ))}\n                </ul>\n              )}\n            </li>\n          )}\n    </>\n  );\n};\n\nexport default NewsItemComment;\n","import React from 'react';\nimport NewsItemComment from './NewsItemComment';\n\nconst NewsItemDetail = (props) => {\n  React.useEffect(() => {\n    if (!props.location || !props.location.state || !props.location.state.newsItemData) {\n      return;\n    }\n\n    setNewsItemData(props.location.state.newsItemData);\n  }, [props.location]);\n\n  const [newsItemData, setNewsItemData] = React.useState('');\n\n  return (\n    <>\n      {newsItemData && (\n        <>\n          <h2 className=\"text--header text--lg\">\n            <a\n              className=\"newsItem__header\"\n              href={newsItemData.url}\n              target=\"_blank\"\n              title={newsItemData.url}\n              rel=\"noopener noreferrer\"\n            >\n              {newsItemData.title}\n            </a>\n          </h2>\n          <h3 className=\"text--header text--md mx--30\">Comments</h3>\n          <ul className=\"list list--comment-feed\">\n            {newsItemData.kids && !!newsItemData.kids.length ? (\n              newsItemData.kids.map((kid) => <NewsItemComment key={`news-comment-${kid}`} commentId={kid} />)\n            ) : (\n              <div className=\"text--secondary\">No comments found</div>\n            )}\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default NewsItemDetail;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport NewsDashboard from './HackerNewsElements';\nimport NewsItemDetail from './HackerNewsElements/NewsItemDetail';\n\nconst AppRouter = () => (\n  <main className=\"main-content container\">\n    <div className=\"col-mid col-mid--dashboard\">\n      <Switch>\n        <Route exact path=\"/\" render={() => <Redirect to=\"/news-feed?page=1\" />} />\n        <Route exact path=\"/news-feed/:id\" component={NewsItemDetail} />\n        <Route exact path=\"/news-feed\" component={NewsDashboard} />\n      </Switch>\n    </div>\n  </main>\n);\n\nexport default AppRouter;\n","import React from 'react';\n\nimport Header from './Header';\nimport AppRouter from './AppRouter';\n\nconst Home = () => (\n  <>\n    <Header />\n    <AppRouter />\n  </>\n);\n\nexport default Home;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './assets/sass/style.css';\nimport Home from './components/Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"hackernewsUI\">\n      <Home />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}